language: scala

sudo: required

dist: trusty

install:
  # This is needed for elasticsearch docker container to start: see https://github.com/travis-ci/travis-ci/issues/6534
  - sudo sysctl -w vm.max_map_count=262144

  # Install Docker on Travis.  Merely exposing Docker through the Travis
  # settings is insufficient, because the docker-compose tests we use are
  # unable to see it in that case.
  - curl -sSL "https://get.docker.com/gpg" | sudo -E apt-key add -
  - echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update
  - sudo apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" --assume-yes install docker-engine
  - docker version

  # Install the AWS tools so we can log in to ECR
  - pip install --upgrade --user awscli

cache:
  directories:
    - "~/.sbt"
    - "~/.ivy2"
    - "project/target/resolution-cache"
    - "project/target/streams"
    - "api/target"
    - "calm_adapter/target"
    - "common/target"
    - "id_minter/target"
    - "ingestor/target"
    - "transformer/target"

matrix:
  include:
    - env: PROJECT=common
    - env: PROJECT=api
    - env: PROJECT=transformer
    - env: PROJECT=calm_adapter
    - env: PROJECT=ingestor
    - env: PROJECT=id_minter

script:
  # https://graysonkoonce.com/getting-the-current-branch-name-during-a-pull-request-in-travis-ci/
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"

  # Run the commands for the test.  Chaining them together means we don't
  # have to pay the cost of starting the JVM three times.
  # http://www.scala-sbt.org/0.12.2/docs/Howto/runningcommands.html
  - sbt "project $PROJECT" ";dockerComposeUp;test;dockerComposeStop"

  - >
    export AWS_DEFAULT_REGION=eu-west-1;
    if [[ "$BRANCH" == "master" ]];
    then
      if [[ "$PROJECT" != "common" ]]; then
        sbt "project $PROJECT" stage;
        export NAME="0.0.1-$(git rev-parse HEAD)_alex";
        $(aws ecr get-login);
        docker build --build-arg project=$PROJECT --build-arg config_bucket=$CONFIG_BUCKET --build-arg build_env=alex --tag=$AWS_ECR_REPO/uk.ac.wellcome/$PROJECT:$NAME .;
        docker push $AWS_ECR_REPO/uk.ac.wellcome/$PROJECT:$NAME;
      else
        echo "Not an application (common); skipping deploy";
      fi;
    else
      echo "Not on master; skipping deploy...";
    fi

env:
  global:
    # This secure environment variable contains an encrypted version of
    # the following environment variables:
    #  * AWS_ACCESS_KEY_ID
    #  * AWS_SECRET_ACCESS_KEY
    #  * AWS_ECR_REPO
    #  * CONFIG_BUCKET
    - secure: MHe9bZxr2Ww9yaRxlGN3yXRa1p+YZdIR0lZrqOr6qxL9GDk1R3lthEObThy/w8irMtE+Rha0PAa7oM2QmdQIm/W7DTiDT4YeVhxw+eCOkAyASqPWMPVV03GA3m0HNY2OCBioiga77HQikLvmLxra1tU292+R8fHaxmmhF7g7YvdRRgi4IPtSZQLmGHbpgN8lOJQNHkh9JYNOjzqYo1guNt4zMHWdltMfYzmt/t7gK5nduv+KzBRH8AV+bjn5a9lH/q/hx4Wk2MG6pxKVNP2aJ57S3Y2wC9OxLBQKWP6ZSRR8/g3KN/lDkpoY14u3TE2muLfYdZdL9/Vy9gOiuCVZNCvqj2C0sFbmYX0d/XVkoVTBgv8hDqdjwWHywtC0yjxnLYk4gridYpS8YPuaMXIrY9rLMgPHr62WZXoSALjlq56VjoNOpVCTrxFkJ1wW9/p2kkwrW8fGTqy/wnZlDelxdrkEJe4YfBB79FhLGJDIaBeXfiFC0lajVJX4D6TEwAuVlWcCTsUkZYIYvLHajjzdOJJYcoySbipSU75t3OJ9Qp6t1VEQS7AMa9moBQtM9ha3RNbBh8A+qksU3X+Y2uG0738HhF8h56LWX+1iH1FC0VXLh8UQWKDvtVfvZWnOJGuOfP7Gxvt3btMQvvBM0LoEOvb8a6kMsfR+oQ6uXEHLMBA=
