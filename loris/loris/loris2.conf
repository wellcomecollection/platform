# loris2.conf
#
# This file is parsed by the ConfigObj library:
#
# <http://www.voidspace.org.uk/python/configobj.html>
#
# ConfigObj uses an ini-like syntax with a few important changes and extensions,
# which are explained here:
#
# <http://www.voidspace.org.uk/python/configobj.html#config-files>
#
# Note that 'unrepr' mode is used, which means that values are parsed as Python
# datatypes, e.g. strings are in quotes, integers are not, True is used for the
# boolean value TRUE, False for the boolean value FALSE, and lists are in []
# with commas (',') as the separators.
#
# <http://www.voidspace.org.uk/python/configobj.html#unrepr-mode>
#
# String interpolation is disabled.
#

[loris.Loris]
tmp_dp = '/tmp/loris2' # r--
www_dp = '/var/www/loris2' # r-x
run_as_user = 'loris'
run_as_group = 'loris'
enable_caching = False
redirect_canonical_image_request = False
redirect_id_slash_to_info = True

# Because we run Loris behind a proxy, change the paths that appear in the
# info.json so they reflect the URL of our proxy, not the origin.
proxy_path = 'https://iiif.wellcomecollection.org/image/'

# Allow arbitrary resizing of images.  This means that when next.wc.org request
# different sizes of image, if they inadvertently request an image that's too
# large, Loris doesn't 404.
max_size_above_full = 0

[logging]
log_to = 'console'    # 'console'|'file'
log_level = 'INFO'  # 'DEBUG'|'INFO'|'WARNING'|'ERROR'|'CRITICAL'
format = '%(asctime)s (%(name)s) [%(levelname)s]: %(message)s'

[resolver]
impl = 'loris.resolver.TemplateHTTPResolver'
cache_root = '/mnt/loris/resolver_cache'
templates = 'wordpress,s3,prismic'

    [[wordpress]]
    url = 'https://wellcomecollection.files.wordpress.com/%s'

    [[s3]]
    url = 'http://s3-eu-west-1.amazonaws.com/wellcomecollection-miro-images-public/%s'

    [[prismic]]
    url = 'https://prismic-io.s3.amazonaws.com/wellcomecollection/%s'

[img.ImageCache]
cache_dp = '/mnt/loris/image_cache' # rwx

[img_info.InfoCache]
cache_dp = '/mnt/loris/info_cache' # rwx

[transforms]
dither_bitonal_images = False
target_formats = ['jpg','png','gif','webp']

    [[png]]
    impl = 'PNG_Transformer'

    [[jpg]]
    impl = 'JPG_Transformer'
    map_profile_to_srgb = True
    srgb_profile_fp = '/usr/share/color/icc/colord/sRGB2014.icc'

    [[tif]]
    impl = 'TIF_Transformer'
