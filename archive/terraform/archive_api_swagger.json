{
  "swagger": "2.0",
  "info": {
    "version": "2018-08-16T14:00:40Z",
    "title": "archive_asset_lookup"
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/storage/v1/bags/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/StorageManifest"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "never",
          "uri": "${lookup_lambda_invoke_arn}",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"id\":  \"$input.params('id')\" \n}"
          },
          "type": "aws"
        }
      }
    },
    "/storage/v1/ingests": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "202 response",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${request_ingest_lambda_invoke_arn}",
          "requestTemplates": {
            "application/json": "{\"body\": $input.json('$'), \"path\":\"$context.path\", \"request_method\":\"$context.httpMethod\"}"
          },
          "responses": {
            "default": {
              "statusCode": "202",
              "responseParameters": {
                "method.response.header.Location": "integration.response.body.location"
              },
              "responseTemplates": {
                "application/json": "{\"id\": \"$input.path('$.id')\"}"
              }
            },
            ".*[BadRequest].*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){\"message\" : \"$inputRoot.errorMessage\"}"
              }
            },
            ".+": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){\"message\" : \"$inputRoot.errorMessage\"}"
              }
            }
          },
          "passthroughBehavior": "never",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/storage/v1/ingests/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${report_ingest_status_lambda_invoke_arn}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "#set($allParams = $input.params()){\"id\": \"$allParams.path.id\",\"request_method\":\"$context.httpMethod\"}"
          },
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "Error Schema"
    },
    "StorageManifest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        },
        "source": {
          "type": "object",
          "properties": {
            "identifierType": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "ontologyType": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "identifierType": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              },
              "ontologyType": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "manifest": {
          "type": "object",
          "properties": {
            "checksumAlgorithm": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "files": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "checksum": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "path": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tagManifest": {
          "type": "object",
          "properties": {
            "checksumAlgorithm": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            },
            "files": {
              "type": "array",
              "items": {}
            }
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "locationType": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "ontologyType": {
                    "type": "string"
                  }
                }
              },
              "ontologyType": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "description": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string"
        },
        "version": {
          "type": "object",
          "properties": {
            "value": {
              "type": "integer"
            }
          }
        }
      }
    }
  }
}
