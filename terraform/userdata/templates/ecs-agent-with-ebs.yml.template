#cloud-config
coreos:
  units:
   - name: update-engine.service
     command: stop
   - name: task-role-iptables.service
     command: start
     content: |
       [Unit]
       Description=iptables setup for ECS Task Roles

       [Service]
       Type=oneshot
       ExecStart=/usr/sbin/sysctl -w net.ipv4.conf.all.route_localnet=1 ; \
                 /usr/sbin/iptables -t nat -A PREROUTING -p tcp \
                                    -d 169.254.170.2 --dport 80 \
                                    -j DNAT --to-destination 127.0.0.1:51679 ; \
                 /usr/sbin/iptables -t nat -A OUTPUT -d 169.254.170.2 -p tcp \
                                    -m tcp --dport 80 -j REDIRECT --to-ports 51679
   - name: format-ebs-volume.service
     command: start
     content: |
       [Unit]
       Description=Formats the ebs volume if needed
       Before=amazon-ecs-agent.service
       [Service]
       Type=oneshot
       RemainAfterExit=yes
       ExecStart=/bin/bash -c '(mkfs -t ext4 ${ebs_block_device})'
   - name: mnt-ebs.mount
     command: start
     content: |
       [Unit]
       Description=Mount EBS Volume to /data
       Requires=format-ebs-volume.service
       After=format-ebs-volume.service
       Before=amazon-ecs-agent.service
       [Mount]
       What=${ebs_block_device}
       Where=/mnt/ebs
       Type=ext4
   - name: cache-cleaner.service
     command: start
     content: |
        [Unit]
        Description=Cache cleaner service
        Requires=mnt-ebs.mount
        [Service]
        ExecStartPre=/bin/bash -c '(/usr/bin/docker rm loris-cache-cleaner || echo "No container named loris-cache-cleaner")'
        ExecStart=/usr/bin/docker run --name loris-cache-cleaner \
                                     --volume /mnt/ebs:/data \
                                     --env=MAX_AGE=${ebs_cache_max_age_days} \
                                     --env=MAX_SIZE=${ebs_cache_max_size} \
                                     --log-driver=awslogs \
                                     --log-opt awslogs-region=${aws_region} \
                                     --log-opt awslogs-group=${ebs_cache_cleaner_group_name} \
                                     wellcome/cache-cleaner:latest
   - name: cache-cleaner.timer
     command: start
     content: |
        [Unit]
        Description=Run cache-cleaner.service every 10 minutes
        [Timer]
        OnCalendar=*:0/10
   - name: amazon-ecs-agent.service
     command: start
     runtime: true
     content: |
       [Unit]
       Description=AWS ECS Agent
       Documentation=https://docs.aws.amazon.com/AmazonECS/latest/developerguide/
       Requires=cache-cleaner.service
       Requires=docker.socket
       After=docker.socket

       [Service]
       Environment=ECS_CLUSTER=${ecs_cluster_name}
       Environment=ECS_LOGLEVEL=${ecs_log_level}
       Environment=ECS_VERSION=${ecs_agent_version}
       Restart=on-failure
       RestartSec=30
       RestartPreventExitStatus=5
       SyslogIdentifier=ecs-agent
       ExecStartPre=-/bin/mkdir -p /var/log/ecs /var/ecs-data /etc/ecs
       ExecStartPre=-/usr/bin/docker kill ecs-agent
       ExecStartPre=-/usr/bin/docker rm ecs-agent
       ExecStartPre=/usr/bin/docker pull amazon/amazon-ecs-agent:$${ECS_VERSION}
       ExecStart=/usr/bin/docker run --name ecs-agent \
                                     --volume=/var/run/docker.sock:/var/run/docker.sock \
                                     --volume=/var/log/ecs:/log \
                                     --volume=/var/ecs-data:/data \
                                     --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro \
                                     --volume=/run/docker/execdriver/native:/var/lib/docker/execdriver/native:ro \
                                     --publish=127.0.0.1:51678:51678 \
                                     --publish=127.0.0.1:51679:51679 \
                                     --net=host \
                                     --env=ECS_LOGFILE=/log/ecs-agent.log \
                                     --env=ECS_LOGLEVEL=$${ECS_LOGLEVEL} \
                                     --env=ECS_DATADIR=/data \
                                     --env=ECS_ENABLE_TASK_IAM_ROLE=true \
                                     --env=ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true \
                                     --env=ECS_CLUSTER=$${ECS_CLUSTER} \
                                     --env=ECS_AVAILABLE_LOGGING_DRIVERS='["awslogs"]' \
                                     --log-driver=awslogs \
                                     --log-opt awslogs-region=${aws_region} \
                                     --log-opt awslogs-group=${ecs_log_group_name} \
                                     amazon/amazon-ecs-agent:$${ECS_VERSION}
